{"version":3,"sources":["components/Timer.js","components/Clock.js","App.js","index.js"],"names":["Timer","props","time","setTime","disableControls","timer","className","id","label","title","control1","onClick","x","display","control2","Clock","sessionTime","setSessionTime","breakTime","setBreakTime","timerType","setTimerType","running","setRunning","setDisableControls","clock","setClock","loop","setLoop","useEffect","beep","document","querySelector","play","addEventListener","currentTime","minutes","Math","floor","seconds","timeConverter","setInterval","clearInterval","pause","preload","src","App","timers","sessionTimer","breakTimer","useState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a13d805.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Timer = (props) => {\n  const { time, setTime, disableControls, timer } = props;\n\n  // HANDLERS\n  const handleIncrement = () => {\n    if (time < 60) {\n      setTime((x) => x + 1);\n    }\n  };\n\n  const handleDecrement = () => {\n    if (time > 1) {\n      setTime((x) => x - 1);\n    }\n  };\n\n  return (\n    <div className={`settings disableControls_${disableControls}`}>\n      <h2 className=\"labels\" id={timer.label.id}>\n        {timer.label.title}\n      </h2>\n      <div className=\"interface\">\n        <button id={timer.control1.id} onClick={handleDecrement}>\n          <i className=\"fas fa-minus\"></i>\n        </button>\n        <div className=\"timer-setting\" id={timer.display.id}>\n          {props.time}\n        </div>\n        <button id={timer.control2.id} onClick={handleIncrement}>\n          <i className=\"fas fa-plus\"></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React, { useEffect } from \"react\";\n\nconst Clock = (props) => {\n  // STATE\n  const {\n    sessionTime,\n    setSessionTime,\n    breakTime,\n    setBreakTime,\n    timerType,\n    setTimerType,\n    running,\n    setRunning,\n    setDisableControls,\n    clock,\n    setClock,\n    loop,\n    setLoop,\n  } = props;\n\n  // HANDLERS\n  const handleReset = () => {\n    setLoop(clearInterval(loop));\n    setRunning(false);\n    setSessionTime(25);\n    setBreakTime(5);\n    setClock(1500);\n    setTimerType(\"Session\");\n    setDisableControls(false);\n    const beep = document.querySelector(\"#beep\");\n    beep.pause();\n    beep.currentTime = 0;\n  };\n\n  const handleStartStop = () => {\n    if (running === false) {\n      setRunning(true);\n      setDisableControls(true);\n      setLoop(\n        setInterval(() => {\n          setClock((x) => x - 1);\n        }, 1000)\n      );\n    } else if (running === true) {\n      setRunning(false);\n      setDisableControls(false);\n      setLoop(clearInterval(loop));\n    }\n  };\n\n  const timeConverter = (time) => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return `${minutes}:${seconds}`;\n  };\n\n  // USE EFFECTS\n  useEffect(() => {\n    if (clock === 0 && timerType === \"Session\" && running) {\n      setTimerType(\"Break\");\n      setClock(breakTime * 60);\n    } else if (clock === 0 && timerType === \"Break\" && running) {\n      setTimerType(\"Session\");\n      setClock(sessionTime * 60);\n    }\n  }, [clock]);\n\n  useEffect(() => {\n    const beep = document.querySelector(\"#beep\");\n    if (clock === 0) {\n      beep.play();\n      beep.addEventListener(\"ended\", () => (beep.currentTime = 0));\n    }\n  }, [clock]);\n\n  // RENDER\n  return (\n    <>\n      <div className=\"clock\">\n        <div className=\"header\">\n          <i className=\"fab fa-react\"></i>\n          <h2 id=\"timer-label\">{timerType}</h2>\n        </div>\n\n        <p id=\"time-left\">{timeConverter(clock)}</p>\n      </div>\n      <div className=\"controls\">\n        <button id=\"start_stop\" onClick={handleStartStop}>\n          {running === false ? (\n            <i className=\"fas fa-play\"></i>\n          ) : (\n            <i className=\"fas fa-pause\"></i>\n          )}\n        </button>\n        <button id=\"reset\" onClick={handleReset}>\n          <i className=\"fas fa-redo\"></i>\n        </button>\n      </div>\n      <audio\n        id=\"beep\"\n        preload=\"auto\"\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n      ></audio>\n    </>\n  );\n};\n\nexport default Clock;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Timer from \"./components/Timer\";\nimport Clock from \"./components/Clock\";\n\nfunction App() {\n  // DATA\n  const timers = {\n    sessionTimer: {\n      label: {\n        id: \"session-label\",\n        title: \"Session Length\",\n      },\n      control1: {\n        id: \"session-decrement\",\n      },\n      control2: {\n        id: \"session-increment\",\n      },\n      display: {\n        id: \"session-length\",\n      },\n    },\n    breakTimer: {\n      label: {\n        id: \"break-label\",\n        title: \"Break Length\",\n      },\n      control1: {\n        id: \"break-decrement\",\n      },\n      control2: {\n        id: \"break-increment\",\n      },\n      display: {\n        id: \"break-length\",\n      },\n    },\n  };\n\n  // STATE\n  const [sessionTime, setSessionTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [timerType, setTimerType] = useState(\"Session\");\n  const [running, setRunning] = useState(false);\n  const [clock, setClock] = useState(1500);\n  const [disableControls, setDisableControls] = useState(false);\n  const [loop, setLoop] = useState();\n\n  // USE EFFECTS\n  // set clock in seconds as session time changes\n  useEffect(() => {\n    setClock(sessionTime * 60);\n  }, [sessionTime]);\n\n  // RENDER\n  return (\n    <>\n      <h1>Pomodoro Clock</h1>\n      <div id=\"pomodoro-container\">\n        <Clock\n          sessionTime={sessionTime}\n          setSessionTime={setSessionTime}\n          breakTime={breakTime}\n          setBreakTime={setBreakTime}\n          timerType={timerType}\n          setTimerType={setTimerType}\n          running={running}\n          setRunning={setRunning}\n          setDisableControls={setDisableControls}\n          clock={clock}\n          setClock={setClock}\n          loop={loop}\n          setLoop={setLoop}\n        />\n        <div className=\"settings-container\">\n          <Timer\n            time={sessionTime}\n            setTime={setSessionTime}\n            timer={timers.sessionTimer}\n            disableControls={disableControls}\n          />\n          <Timer\n            time={breakTime}\n            setTime={setBreakTime}\n            timer={timers.breakTimer}\n            disableControls={disableControls}\n            setDisableControls={setDisableControls}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}